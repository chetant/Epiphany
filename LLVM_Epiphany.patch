diff -Naur llvm-3.9.1.src.orig/CMakeLists.txt llvm-3.9.1.src/CMakeLists.txt
--- llvm-3.9.1.src.orig/CMakeLists.txt	2016-09-13 16:44:50.000000000 +0300
+++ llvm-3.9.1.src/CMakeLists.txt	2017-02-04 00:54:55.780860041 +0300
@@ -223,6 +223,7 @@
   AMDGPU
   ARM
   BPF
+  Epiphany
   Hexagon
   Mips
   MSP430

diff -Naur llvm-3.9.1.src.orig/include/llvm/ADT/Triple.h llvm-3.9.1.src/include/llvm/ADT/Triple.h
--- llvm-3.9.1.src.orig/include/llvm/ADT/Triple.h	2016-07-24 13:34:15.000000000 +0300
+++ llvm-3.9.1.src/include/llvm/ADT/Triple.h	2017-02-04 00:54:55.780860041 +0300
@@ -53,6 +53,7 @@
     avr,            // AVR: Atmel AVR microcontroller
     bpfel,          // eBPF or extended BPF or 64-bit BPF (little endian)
     bpfeb,          // eBPF or extended BPF or 64-bit BPF (big endian)
+    epiphany,       // Epiphany E16 backend
     hexagon,        // Hexagon: hexagon
     mips,           // MIPS: mips, mipsallegrex
     mipsel,         // MIPSEL: mipsel, mipsallegrexel

diff -Naur llvm-3.9.1.src.orig/include/llvm/Object/ELFObjectFile.h llvm-3.9.1.src/include/llvm/Object/ELFObjectFile.h
--- llvm-3.9.1.src.orig/include/llvm/Object/ELFObjectFile.h	2016-07-16 01:27:55.000000000 +0300
+++ llvm-3.9.1.src/include/llvm/Object/ELFObjectFile.h	2017-02-04 00:54:55.780860041 +0300
@@ -842,6 +842,8 @@
       return "ELF32-iamcu";
     case ELF::EM_X86_64:
       return "ELF32-x86-64";
+    case ELF::EM_ADAPTEVA_EPIPHANY:
+      return "ELF32-epiphany";
     case ELF::EM_ARM:
       return (IsLittleEndian ? "ELF32-arm-little" : "ELF32-arm-big");
     case ELF::EM_AVR:

diff -Naur llvm-3.9.1.src.orig/include/llvm/Support/ELF.h llvm-3.9.1.src/include/llvm/Support/ELF.h
--- llvm-3.9.1.src.orig/include/llvm/Support/ELF.h	2016-07-16 01:27:55.000000000 +0300
+++ llvm-3.9.1.src/include/llvm/Support/ELF.h	2017-02-04 00:54:55.781860041 +0300
@@ -312,6 +312,7 @@
   EM_AMDGPU        = 224, // AMD GPU architecture
   EM_LANAI         = 244, // Lanai 32-bit processor
   EM_BPF           = 247, // Linux kernel bpf virtual machine
+  EM_ADAPTEVA_EPIPHANY = 0x1223, // Adapteva's Epiphany architecture
 
   // A request has been made to the maintainer of the official registry for
   // such numbers for an official value for WebAssembly. As soon as one is
@@ -532,6 +533,11 @@
 #include "ELFRelocs/Mips.def"
 };
 
+// ELF Relocation types for Epiphany
+enum {
+#include "ELFRelocs/Epiphany.def"
+};
+
 // Special values for the st_other field in the symbol table entry for MIPS.
 enum {
   STO_MIPS_OPTIONAL        = 0x04,  // Symbol whose definition is optional

diff -Naur llvm-3.9.1.src.orig/include/llvm/Support/ELFRelocs/Epiphany.def llvm-3.9.1.src/include/llvm/Support/ELFRelocs/Epiphany.def
--- llvm-3.9.1.src.orig/include/llvm/Support/ELFRelocs/Epiphany.def	1970-01-01 03:00:00.000000000 +0300
+++ llvm-3.9.1.src/include/llvm/Support/ELFRelocs/Epiphany.def	2017-02-05 01:33:48.406731506 +0300
@@ -0,0 +1,33 @@
+#ifndef ELF_RELOC
+#error "ELF_RELOC must be defined"
+#endif
+
+ELF_RELOC(R_EPIPHANY_NONE,    0)
+
+/* Absolute address relocations.  */
+ELF_RELOC(R_EPIPHANY_8,       1)
+ELF_RELOC(R_EPIPHANY_16,      2)
+ELF_RELOC(R_EPIPHANY_32,      3)
+
+/* PC-relative relocations.  */
+ELF_RELOC(R_EPIPHANY_8_PCREL, 4)
+ELF_RELOC(R_EPIPHANY_16_PCREL,5)
+ELF_RELOC(R_EPIPHANY_32_PCREL,6)
+
+/* special forms for 8/24 bit branch displacements.  */
+ELF_RELOC(R_EPIPHANY_SIMM8,   7)
+ELF_RELOC(R_EPIPHANY_SIMM24,  8)
+
+/* HIGH and LOW relocations taking part of a 32 bit address and
+   depositing it into the IMM16 field of a destination.  */
+ELF_RELOC(R_EPIPHANY_HIGH,    9)
+ELF_RELOC(R_EPIPHANY_LOW,     10)
+
+/* 11 bit signed immediate value.  */
+ELF_RELOC(R_EPIPHANY_SIMM11,  11)
+/* 11 bit magnitude addressing displacement.  */
+ELF_RELOC(R_EPIPHANY_IMM11,   12)
+
+/* 8 bit immediate for MOV.S R,IMM8.  */
+ELF_RELOC(R_EPIPHANY_IMM8,    13)
+
diff -Naur llvm-3.9.1.src.orig/lib/Object/ELF.cpp llvm-3.9.1.src/lib/Object/ELF.cpp
--- llvm-3.9.1.src.orig/lib/Object/ELF.cpp	2016-07-16 01:27:55.000000000 +0300
+++ llvm-3.9.1.src/lib/Object/ELF.cpp	2017-02-04 00:54:55.781860041 +0300
@@ -118,6 +118,13 @@
       break;
     }
     break;
+  case ELF::EM_ADAPTEVA_EPIPHANY:
+    switch (Type) {
+#include "llvm/Support/ELFRelocs/Epiphany.def"
+    default:
+      break;
+    }
+    break;
   default:
     break;
   }

diff -Naur llvm-3.9.1.src.orig/lib/Support/Triple.cpp llvm-3.9.1.src/lib/Support/Triple.cpp
--- llvm-3.9.1.src.orig/lib/Support/Triple.cpp	2016-07-24 13:34:15.000000000 +0300
+++ llvm-3.9.1.src/lib/Support/Triple.cpp	2017-02-04 00:54:55.792860041 +0300
@@ -28,6 +28,7 @@
   case avr:            return "avr";
   case bpfel:          return "bpfel";
   case bpfeb:          return "bpfeb";
+  case epiphany:       return "epiphany";
   case hexagon:        return "hexagon";
   case mips:           return "mips";
   case mipsel:         return "mipsel";
@@ -97,6 +98,8 @@
 
   case hexagon:     return "hexagon";
 
+  case epiphany:    return "epiphany";
+
   case amdgcn:      return "amdgcn";
   case r600:        return "r600";
 
@@ -247,6 +250,7 @@
     .Case("armeb", armeb)
     .Case("avr", avr)
     .StartsWith("bpf", BPFArch)
+    .Case("epiphany", epiphany)
     .Case("mips", mips)
     .Case("mipsel", mipsel)
     .Case("mips64", mips64)
@@ -363,6 +367,7 @@
     .Case("arm64", Triple::aarch64)
     .Case("arm", Triple::arm)
     .Case("armeb", Triple::armeb)
+    .Case("epiphany", Triple::epiphany)
     .Case("thumb", Triple::thumb)
     .Case("thumbeb", Triple::thumbeb)
     .Case("avr", Triple::avr)
@@ -588,6 +593,7 @@
   case Triple::bpfeb:
   case Triple::bpfel:
   case Triple::hexagon:
+  case Triple::epiphany:
   case Triple::lanai:
   case Triple::hsail:
   case Triple::hsail64:
@@ -1126,6 +1132,7 @@
   case llvm::Triple::arm:
   case llvm::Triple::armeb:
   case llvm::Triple::hexagon:
+  case llvm::Triple::epiphany:
   case llvm::Triple::le32:
   case llvm::Triple::mips:
   case llvm::Triple::mipsel:
@@ -1205,6 +1212,7 @@
   case Triple::arm:
   case Triple::armeb:
   case Triple::hexagon:
+  case Triple::epiphany:
   case Triple::kalimba:
   case Triple::le32:
   case Triple::mips:
@@ -1250,6 +1258,7 @@
   case Triple::UnknownArch:
   case Triple::avr:
   case Triple::hexagon:
+  case Triple::epiphany:
   case Triple::kalimba:
   case Triple::lanai:
   case Triple::msp430:

diff -Naur llvm-3.9.1.src.orig/lib/Target/LLVMBuild.txt llvm-3.9.1.src/lib/Target/LLVMBuild.txt
--- llvm-3.9.1.src.orig/lib/Target/LLVMBuild.txt	2016-05-05 17:35:40.000000000 +0300
+++ llvm-3.9.1.src/lib/Target/LLVMBuild.txt	2017-02-04 00:54:55.801860041 +0300
@@ -24,6 +24,7 @@
  AArch64
  AVR
  BPF
+ Epiphany
  Lanai
  Hexagon
  MSP430
